<?php
/**
 * Developer theme to easy construct and output the new nivo slider instance.
 * @file sorce for nivo_slider_api module
 *
 * @see nivo_slider_api_test() for usage example
 */


/**
 * Implements hook_menu().
 *
 * @todo remove in non-dev version
 */
function nivo_slider_api_menu() {
  $items = array();
  $items['nivo-slider-api-test'] = array(
    'title' => 'nivo_slider_api',
    'description' => 'nivo_slider_api_test',
    'page callback' => 'nivo_slider_api_test',
    'access arguments' => array('administer site configuration'),
    'menu_name' => 'Navigation',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Example page how to use nivo_slider_api theme.
 *
 * @todo remove in non-dev version
 */
function nivo_slider_api_test() {
  // Load test data.
  $field_name = 'field_image';
  if (!field_info_field($field_name)) {
    return t('There is no field with !name', array('!name' => $field_name));
  }

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->propertyCondition('status', 1);
  $query->fieldCondition($field_name, 'fid', 'NULL', '!=');
  $query->range(0, 15);

  $result = $query->execute();
  $nodes = array();
  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $nodes = node_load_multiple($nids);
  }

  // Init vars.
  $captions = array();
  $slider_items = array();
  foreach ($nodes as $item) {
    // $slider_items can be either render array or html string.
    $title = $item->title;
    $image_field_items = field_get_items('node', $item, $field_name);
    // Build images.
    $image = array(
      '#theme' => 'image_style',
      '#path' => $image_field_items[0]['uri'],
      '#alt' => $title,
      // Associate slider item with caption item.
      '#title' => '#nid-' . $item->nid,
      '#style_name' => '640w380h_scale_and_crop',
    );
    // Wrapp immages to links.
    $slider_items[] = array(
      '#type' => 'link',
      '#href' => 'node/' . $item->nid,
      '#title' => render($image),
      '#options' => array(
        // If link is image - this option always TRUE.
        'attributes' => array('title' => $title),
        'html' => TRUE,
      ),
    );
    // Caption item key will be a caption html element id attribute,
    // and value - content.
    // Example; $captions['fid-' . $item->fid] = $item->title.
    // Also, caption can be a render array.
    $captions['nid-' . $item->nid]['main_content']['#theme'] = 'item_list';
    $captions['nid-' . $item->nid]['main_content']['#items'] = array($item->title);
    $captions['nid-' . $item->nid]['main_content']['#prefix'] = '<h3>';
    $captions['nid-' . $item->nid]['main_content']['#suffix'] = '</h3>';

    $captions['nid-' . $item->nid]['related_articles'] = array(
      '#theme' => 'item_list',
      '#items' => array(
        'Item 1',
        'Item 2',
      ),
    );
  }

  $options = array();
  // Add nivo slider settings.
  // You can customize all your slider inctances by passing a slider setting.
  $options['settings'] = array(
    'directionNav' => TRUE,
  );
  // Also, you can use your own theme,
  // (copy from nivo-slider some theme and paste it to you module).
  // You can chanege styles to your own needs.
  $theme_name = 'simplejstheme';
  $module_name = 'nivo_slider_api';
  $module_path = drupal_get_path('module', $module_name);
  $options['theme']['css'] = "$module_path/themes/$theme_name/$theme_name.css";
  $options['theme']['js'] = "$module_path/themes/$theme_name/$theme_name.js";
  // Name option is required.
  $options['theme']['name'] = $theme_name;

  return array(
    '#theme' => 'nivo_slider_api',
    '#items' => $slider_items,
    '#captions' => $captions,
    // Name of the slider. Must be unic.
    '#name' => 'test-slider',
    '#options' => $options,
  );
}

/**
 * Implements hook_theme().
 */
function nivo_slider_api_theme($existing, $type, $theme, $path) {
  return array(
    'nivo_slider_api' => array(
      'template' => 'templates/nivo-slider',
      'variables' => array(
        'items' => array(),
        'captions' => array(),
        'options' => array(),
        'name' => NULL,
      ),
    ),
  );
}

/**
 * Preprocess for nivo_slider_api_wrapper theme.
 */
function template_preprocess_nivo_slider_api(&$vars) {
  $options = $vars['options'];
  $captions = $vars['captions'];

  if (!isset($vars['name'])) {
    throw new Exception('Name option can`t be empty.');
  }

  $name = $vars['name'];
  $vars['classes_array'][0] = 'nivo-slider-api-wrapper';
  $vars['classes_array'][] = 'nivo-slider-api-wrapper-' . $name;

  $default_settings = array();
  // Apply the slidr theme.
  if (isset($options['theme'])) {

    if (!isset($options['theme']['name'])) {
      throw new Exception('Theme Name option can`t be empty.');
    }
    // Add wrappers classes.
    if (isset($options['theme']['name']) && !empty($options['theme']['name'])) {
      $vars['classes_array'][] = 'theme-' . $options['theme']['name'];
      $vars['classes_array'][] = 'slider-wrapper';
    }
    if (isset($options['theme']['css'])) {
      drupal_add_css($options['theme']['css']);
    }
    if (isset($options['theme']['js'])) {
      // Make theme name visible in js files.
      $default_settings['theme_name'] = $options['theme']['name'];
      drupal_add_js($options['theme']['js'], array('scope' => 'footer'));
    }
  }
  // Load default theme.
  else {
    drupal_add_css('sites/all/libraries/nivo-slider/themes/default/default.css');
  }

  // Load library.
  drupal_add_library('nivo_slider_api', 'jquery.nivo.slider');
  // Add default settings.
  $default_settings += array(
    'animSpeed' => 500,
    'captionOpacity' => 1,
    'controlNav' => TRUE,
    'controlNavThumbs' => FALSE,
    'directionNav' => TRUE,
    'directionNavHide' => TRUE,
    'effect' => "fade",
    'manualAdvance' => FALSE,
    'pauseOnHover' => FALSE,
    'pauseTime' => 5000,
    'slices' => 1,
    'startSlide' => 0,
    // Prev directionNav text.
    'prevText' => t('Prev'),
    // Next directionNav text.
    'nextText' => t('Next'),
  );
  // Add slider instance settings.
  $settings = $default_settings;
  if (isset($options['settings']) && !empty($options['settings'])) {
    $settings = array_merge($default_settings, $options['settings']);
  }
  $data = array('nivo_slider_api' => array($name => $settings));
  drupal_add_js($data, 'setting');

  // Prepare slider items.
  $items = $vars['items'];
  // Reset items variable.
  $vars['items'] = array();
  foreach ($items as $item) {
    if (is_array($item)) {
      // Expecst that the $item is a render array.
      $vars['items'][] = render($item);
    }
  }
  if (isset($vars['captions']) && !empty($vars['captions'])) {
    $captions = $vars['captions'];
    // Reset captions variable.
    $vars['captions'] = array();
    foreach ($captions as $id => $caption) {
      // Expects that the $item is a render array.
      if (is_array($caption)) {
        $vars['captions'][$id] = render($caption);
      }
      elseif (is_string($caption)) {
        $vars['captions'][$id] = $caption;
      }
    }
  }

  // Run sliders.
  $module_path = drupal_get_path('module', 'nivo_slider_api');
  drupal_add_js($module_path . '/nivo_slider_api.js');
}

/**
 * Implements hook_library().
 */
function nivo_slider_api_library() {
  $libraries['jquery.nivo.slider'] = array(
    'title' => 'jQuery Nivo Slider',
    'website' => 'http://dev7studios.com/nivo-slider',
    'version' => '3.1',
    'js' => array(
      'sites/all/libraries/nivo-slider/jquery.nivo.slider.pack.js' => array(),
    ),
    'css' => array(
      'sites/all/libraries/nivo-slider/nivo-slider.css' => array(),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_image_default_styles().
 */
function nivo_slider_api_image_default_styles() {
  $styles = array();
  $styles['640w380h_scale_and_crop'] = array(
    'effects' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 640,
          'height' => 380,
        ),
        'weight' => 0,
      ),
    ),
  );
  return $styles;
}
